$grid-x-columns: (
        '1\/5' : 20%,
        '1\/7' : 14.2857142857%,
        '1\/8' : 12.5%,
        '1\/9' : 11.1111111111%,
        '1\/11' : 9.09090909091%,
        '2\/5' : 40%,
        '3\/5' : 60%,
        '4\/5' : 80%,
        '1\/10' : 10%,
        '3\/10' : 30%,
        '5\/10' : 50%,
        '7\/10' : 70%,
        '9\/10' : 90%,
        '35\/8333333' : 35.8333333%,
        '64\/1666667' : 64.1666667%,
        '26\/1200' : 26.23%,
        '13\/1200' : 13.115%,
        '73\/1200' : 73.77%,
        '50\/41' : 50.41%,
        '49\/59' : 49.59%,
        '46': 46%,
        '54': 54%,
);

@each $breakpoint in map-keys($grid-breakpoints) {
  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
  @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
    @each $column, $column-value in $grid-x-columns {
      .col#{$infix}-#{$column} {
        flex: 0 0 $column-value;
        max-width: $column-value;
      }
    }
    // Offset
    @each $column, $column-value in $grid-x-columns {
      .offset#{$infix}-#{$column} {
        margin-left: $column-value;
      }
    }
    // RTL Offset 
    @each $column, $column-value in $grid-x-columns {
      .rtl .offset#{$infix}-#{$column} {
        margin-right: $column-value;
        margin-left: 0;
      }
    }
  }
}

// Custom Gutters 
$customs_gutters: (
        0 : 0,
        10 : 10px,
        12 : 12px,
        15 : 15px,
        20 : 20px,
        25 : 25px,
        30 : 30px,
        35 : 35px,
        40 : 40px,
        50 : 50px,
        60 : 60px,
        70 : 70px,
        80 : 80px,
        90 : 90px,
        100 : 100px,
        120 : 120px,
        150 : 150px,
        230 : 230px,
        300 : 300px,
);
@each $breakpoint in map-keys($grid-breakpoints) {
  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
  @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
    @each $gutters, $gutters-value in $customs_gutters {
      .gutter#{$infix}-#{$gutters} {
        margin-left: ($gutters-value / -2);
        margin-right: ($gutters-value / -2);

        > [class*='col'],
        > * {
          padding-left: ($gutters-value / 2);
          padding-right: ($gutters-value / 2);
        }
      }
      .ef5-element-horizontal {
        &.gutter#{$infix}-#{$gutters} {
          > .vc_column-inner > .wpb_wrapper {
            margin-left: ($gutters-value / -2);
            margin-right: ($gutters-value / -2);

            > * {
              padding-left: ($gutters-value / 2);
              padding-right: ($gutters-value / 2);
            }
          }
        }
      }
    }
  }
}

// Dimensions
$dimensions: (
        120,
        380
);
@each $breakpoint in map-keys($grid-breakpoints) {
  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
  @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
    @each $dimension in $dimensions {
      .mw#{$infix}-#{$dimension} {
        max-width: #{$dimension}px;
        min-width: unset !important;
      }
    }
  }
}

.no-container {
  padding-left: $grid-gutter-width / 2;
  padding-right: $grid-gutter-width / 2;
}

.container-wide {
  @media (min-width: 1400px) {
    padding-left: 110px;
    padding-right: 110px;
    max-width: 100%;
  }
}

.ef5-grid {
  margin: -25px -15px;

  > .ef5-grid-item {
    padding: 25px 15px;
  }
}